#!/usr/bin/env python
# -*- coding: utf-8 -*-

# Triangle, pentagonal, and hexagonal numbers are generated by the following formulae:
#
# Triangle      Tn=n(n+1)/2       1, 3, 6, 10, 15, ...
# Pentagonal    Pn=n(3n−1)/2      1, 5, 12, 22, 35, ...
# Hexagonal     Hn=n(2n−1)        1, 6, 15, 28, 45, ...
# It can be verified that T(285) = P(165) = H(143) = 40755.
#
# Find the next triangle number that is also pentagonal and hexagonal.

import math

def solve_quadratic_quation(a,b,c):
    root = None
    discriminant = (b*b - 4*a*c)
    if discriminant > 0:
        rt = math.sqrt(discriminant)
        root = (-b + rt) / (2 * a) # get positive only
    elif discriminant == 0:
        root = -b / (2 * a)
    return int(root) if discriminant > 0 and root - int(root) == 0 else None

def is_pentagonal_number(num):
    a, b, c = 3, -1, (num * -2)
    return solve_quadratic_quation(a,b,c) is not None

def is_hexagonal_number(num):
    a, b, c = 2, -1, (num * -1)
    return solve_quadratic_quation(a,b,c) is not None

def triangle_numbers(limit):
    for n in range(1, limit+1):
        yield n * (n + 1) / 2

def solution():
    for n in triangle_numbers(100000):
        if n <= 40755:
            continue
        if is_hexagonal_number(n) and is_pentagonal_number(n):
            return n

print 'Answer is:', solution()
